name: Python package

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build and compile
      run: |
        pip install pyinstaller
        pyinstaller -F main.py
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: note-interpreter-${{ matrix.os }}
        path: |
          dist/*
          templates/
          neuronet/notes_length.h5
    - name: Create Release
      if: |
        startsWith(github.ref, 'refs/tags/') && 
        ${{ matrix.os }} == macos-latest
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Update release
      if: startsWith(github.ref, 'refs/tags/')
      uses: johnwbyrd/update-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        files: note-interpreter-${{ matrix.os }}
